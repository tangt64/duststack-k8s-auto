- name: prepare helm YAML files to the first master node
  copy:
    src: "{{ item }}"
    dest: /tmp/
  with_items:
    - helm.sh
    - rbac-config.yaml
    - ceph-common.yaml
    - ceph-operator.yaml
    - ceph-cluster.yaml
    - rook-toolbox.yaml
    - rook-storageclass.yaml
    - rook-filesystem.yaml

- name: prepare helm package manager
  shell: sh /tmp/helm.sh

- name: create service account tiller
  command: kubectl create -f /tmp/rbac-config.yaml

- name: edit clusterrolebind permissive-binding
  command: kubectl create clusterrolebinding permissive-binding --clusterrole=cluster-admin --user=admin --user=kubelet --group=system:serviceaccounts

- name: initialize helm
  command: helm init --wait --service-account tiller

- name: update to helm repository
  command: helm repo update

- name: install Traefik HTTP reverse proxy server
  command: helm install stable/traefik --wait --name my-traefik --namespace kube-system --set serviceType=NodePort,dashboard.enabled=true,accessLogs.enabled=true,metrics.prometheus.enabled=true,rbac.enable=true

- name: verify Traefik POD
  command: kubectl describe svc my-traefik --namespace kube-system

- name: enabled and install to rook repository
  command: "{{ item }}"
  with_items: 
    - "helm repo add rook-release https://charts.rook.io/release"
    - "helm install --namespace rook-ceph rook-release/rook-ceph"
  ignore_errors: yes

# - name: deploy the Rook operator
#   command: kubectl create -f /tmp/"{{ item }}"
#   with_items:
#     - ceph-common.yaml
#     - ceph-operator.yaml
#     - ceph-cluster.yaml
#   ignore_errors: yes

- name: verify the rook-ceph-operator is 'Running'
  command: kubectl get pods -n rook-ceph

- name: deploy Rook toolbox 
  command: kubectl create -f /tmp/rook-toolbox.yaml
  
- name: create a storage class based on the ceph RBD volume plugin
  command: kubectl create -f /tmp/rook-storageclass.yaml
  

- name: create a shared file system which can be mounted read-write from multi pods
  command: kubectl create -f /tmp/rook-filesystem.yaml

- name: deploy kubernetes metrics service
  command: helm install --name metrics-server stable/metrics-server  --namespace metrics --set args={"--kubelet-insecure-tls=true,--kubelet-preferred-address-types=InternalIP\,Hostname\,ExternalIP"}
