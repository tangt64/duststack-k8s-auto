---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- token: "9a08jv.c0izixklcxtmnze7"
  description: "kubeadm bootstrap token"
  ttl: "24h"
- token: "783bde.3f89s0fje9f38fhf"
  description: "another bootstrap token"
  usages:
  - authentication
  - signing
  groups:
  - system:bootstrappers:kubeadm:default-node-token
# nodeRegistration:
#   name: "bootstrap"
#   taints: []
#   kubeletExtraArgs:
#     service-node-port-range: 80-32767
#   imagePullPolicy: "IfNotPresent"
localAPIEndpoint:
  advertiseAddress: {{ ansible_facts[k8s_interface]['ipv4']['address'] }}
  bindPort: 6443
certificateKey: "e6a2eb8581237ab72a4f494f30285ec12a9694d750b9785706a83bfcbbbd2204"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: {{ k8s_version }}
apiServer:
  certSANs:
  - 127.0.0.1
  - {{ k8s_api_domain }}
  - {{ ansible_facts[k8s_interface]['ipv4']['address'] }}
  - {{ ansible_facts['default_ipv4']['address'] }}
  # extraArgs:
  #   authorization-mode: Node,RBAC
  #   feature-gates: "TTLAfterFinished=true"
  #   audit-policy-file: "/etc/kubernetes/audit-policy.yaml"
  #   audit-log-path: "/etc/kubernetes/audit/kube-apiserver-audit.log"
  #   audit-log-maxage: "2"
  # extraVolumes:
  # - name: "audit-policy"
  #   hostPath: "/etc/kubernetes/audit-policy.yaml"
  #   mountPath: "/etc/kubernetes/audit-policy.yaml"
  #   readOnly: false
  #   pathType: File
  # - name: "audit-volume"
  #   hostPath: "/var/log/kubernetes/audit"
  #   mountPath: "/etc/kubernetes/audit"
  #   readOnly: false
  #   pathType: DirectoryOrCreate
  timeoutForControlPlane: 4m0s
certificatesDir: /etc/kubernetes/pki
clusterName: {{ k8s_clusterName }}
controlPlaneEndpoint: {{ ansible_facts[k8s_interface]['ipv4']['address'] }}:{{ k8s_endpoint_port }}
controllerManager: 
  extraArgs:
    feature-gates: TTLAfterFinished=true
    bind-address: {{ ansible_facts[k8s_interface]['ipv4']['address'] }}
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: k8s.gcr.io
networking:
  dnsDomain: {{ k8s_cluster_domain }}
  podSubnet: {{ k8s_pod_cidr }}
  serviceSubnet: {{ k8s_cluster_svc_ip }}
scheduler:
  extraArgs:
    feature-gates: TTLAfterFinished=true
    bind-address: {{ ansible_facts[k8s_interface]['ipv4']['address'] }}
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration  